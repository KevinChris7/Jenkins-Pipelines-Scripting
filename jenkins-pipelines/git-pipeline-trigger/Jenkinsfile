#!/usr/bin/env groovy

node(){
    def work_dir = '/var/lib/jenkins/workspace/git_push_notifier'
    def output
    stage("Git Checkout"){
        checkout(
            [
                $class: 'GitSCM',
                branches: [[name: 'master']],
                userRemoteConfigs: [[url: "${GIT_REPO_NOTIFY}", credentialsId: "${CREDENTIALS_ID}"]]
            ]
        )
        println("Checkout Completed Succesfully")
    }
    stage("Install GIT&Pre-commit") {
        try{
            dir(work_dir){
                sh('''
                    #!/bin/bash
                    mkdir -p ${JENKINS_HOME}/project
                    mkdir -p ${JENKINS_HOME}/project/internaltools
                    sudo yum install python3 -y
                    git --version $?
                    if [ $? -eq 0 ]; then
                        echo "GIT is already installed"
                    else 
                        sudo yum install git -y
                        echo "Installed GIT"
                    fi
                    if hash pre-commit 2>/dev/null; then
                        echo "pre-commit exists"
                    else
                        echo "Installing Pre-Commit...."
                        sudo pip3 install pre-commit
                        echo "Pre-Commit Installed successfully"                
                        echo "$PWD"
                    fi
                ''')
            }
        }
        catch(e){
            println("Exception occurred in Installing GIT and Pre-Commit")
        }
    }
    stage("pre-commit hook install"){
        try{
            dir(work_dir){
                sh('''sudo pre-commit install''')
            }
        }
        catch(e){
            println("Error occurred in pre-commit install")
        }
    }
    stage("pre-commit Check"){
        try{
            dir(work_dir){
                sh('''
                    #!/usr/bin/python
                    pre-commit clean
                    pre-commit autoupdate
                    pre-commit run --all-files | tee output.txt | grep 'error'
                ''')
            }
        }
        catch(e){
            println("Error occurred in pre-commit testing")
        }
        finally{
            deleteDir()
        }
    }    
}